#!/usr/bin/env node
var io    = require('socket.io').listen(8080)
  , scale = require('dymo-scale')
  , exec  = require('child_process').exec
  , fs    = require('fs');

io.sockets.on('connection', function(socket) {
  var poll;

  (poll = function() {
    scale.read(function(err, data) {
      if(err) {
        return setTimeout(poll, 2000);
      }

      socket.emit('scale', data.value);
      return setTimeout(poll, 100);
    });
  })();

  socket.on('disconnect', function () {
    clearTimeout(poll);
    poll = null;
  });

  socket.on('printer', function(data) {
    var path = '/tmp/' + new Date().getTime();

    binaryData = new Buffer(data, 'base64');

    fs.writeFile(path, binaryData, function(err) {
      if(err) return;

      console.log ('lpr -l ' + path)

      exec('lpr -l ' + path, function() {
        fs.unlink(path);
      });
    });
  });
});
